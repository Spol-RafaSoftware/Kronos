// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Request.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kronos.Core.Messages {

  /// <summary>Holder for reflection information generated from Request.proto</summary>
  public static partial class RequestReflection {

    #region Descriptor
    /// <summary>File descriptor for Request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1SZXF1ZXN0LnByb3RvGgphdXRoLnByb3RvGhFyZXF1ZXN0VHlwZS5wcm90",
            "bxoMaW5zZXJ0LnByb3RvGglnZXQucHJvdG8aDGRlbGV0ZS5wcm90bxoLY291",
            "bnQucHJvdG8aDmNvbnRhaW5zLnByb3RvGgtjbGVhci5wcm90byKeAgoHUmVx",
            "dWVzdBITCgRBdXRoGAEgASgLMgUuQXV0aBIaCgRUeXBlGAIgASgOMgwuUmVx",
            "dWVzdFR5cGUSJQoNSW5zZXJ0UmVxdWVzdBgDIAEoCzIOLkluc2VydFJlcXVl",
            "c3QSHwoKR2V0UmVxdWVzdBgEIAEoCzILLkdldFJlcXVlc3QSJQoNRGVsZXRl",
            "UmVxdWVzdBgFIAEoCzIOLkRlbGV0ZVJlcXVlc3QSKQoPQ29udGFpbnNSZXF1",
            "ZXN0GAYgASgLMhAuQ29udGFpbnNSZXF1ZXN0EiMKDENvdW50UmVxdWVzdBgH",
            "IAEoCzINLkNvdW50UmVxdWVzdBIjCgxDbGVhclJlcXVlc3QYCCABKAsyDS5D",
            "bGVhclJlcXVlc3RCF6oCFEtyb25vcy5Db3JlLk1lc3NhZ2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kronos.Core.Messages.AuthReflection.Descriptor, global::Kronos.Core.Messages.RequestTypeReflection.Descriptor, global::Kronos.Core.Messages.InsertReflection.Descriptor, global::Kronos.Core.Messages.GetReflection.Descriptor, global::Kronos.Core.Messages.DeleteReflection.Descriptor, global::Kronos.Core.Messages.CountReflection.Descriptor, global::Kronos.Core.Messages.ContainsReflection.Descriptor, global::Kronos.Core.Messages.ClearReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kronos.Core.Messages.Request), global::Kronos.Core.Messages.Request.Parser, new[]{ "Auth", "Type", "InsertRequest", "GetRequest", "DeleteRequest", "ContainsRequest", "CountRequest", "ClearRequest" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kronos.Core.Messages.RequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      Auth = other.auth_ != null ? other.Auth.Clone() : null;
      type_ = other.type_;
      InsertRequest = other.insertRequest_ != null ? other.InsertRequest.Clone() : null;
      GetRequest = other.getRequest_ != null ? other.GetRequest.Clone() : null;
      DeleteRequest = other.deleteRequest_ != null ? other.DeleteRequest.Clone() : null;
      ContainsRequest = other.containsRequest_ != null ? other.ContainsRequest.Clone() : null;
      CountRequest = other.countRequest_ != null ? other.CountRequest.Clone() : null;
      ClearRequest = other.clearRequest_ != null ? other.ClearRequest.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "Auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::Kronos.Core.Messages.Auth auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.Auth Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Kronos.Core.Messages.RequestType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.RequestType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "InsertRequest" field.</summary>
    public const int InsertRequestFieldNumber = 3;
    private global::Kronos.Core.Messages.InsertRequest insertRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.InsertRequest InsertRequest {
      get { return insertRequest_; }
      set {
        insertRequest_ = value;
      }
    }

    /// <summary>Field number for the "GetRequest" field.</summary>
    public const int GetRequestFieldNumber = 4;
    private global::Kronos.Core.Messages.GetRequest getRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.GetRequest GetRequest {
      get { return getRequest_; }
      set {
        getRequest_ = value;
      }
    }

    /// <summary>Field number for the "DeleteRequest" field.</summary>
    public const int DeleteRequestFieldNumber = 5;
    private global::Kronos.Core.Messages.DeleteRequest deleteRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.DeleteRequest DeleteRequest {
      get { return deleteRequest_; }
      set {
        deleteRequest_ = value;
      }
    }

    /// <summary>Field number for the "ContainsRequest" field.</summary>
    public const int ContainsRequestFieldNumber = 6;
    private global::Kronos.Core.Messages.ContainsRequest containsRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.ContainsRequest ContainsRequest {
      get { return containsRequest_; }
      set {
        containsRequest_ = value;
      }
    }

    /// <summary>Field number for the "CountRequest" field.</summary>
    public const int CountRequestFieldNumber = 7;
    private global::Kronos.Core.Messages.CountRequest countRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.CountRequest CountRequest {
      get { return countRequest_; }
      set {
        countRequest_ = value;
      }
    }

    /// <summary>Field number for the "ClearRequest" field.</summary>
    public const int ClearRequestFieldNumber = 8;
    private global::Kronos.Core.Messages.ClearRequest clearRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kronos.Core.Messages.ClearRequest ClearRequest {
      get { return clearRequest_; }
      set {
        clearRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(InsertRequest, other.InsertRequest)) return false;
      if (!object.Equals(GetRequest, other.GetRequest)) return false;
      if (!object.Equals(DeleteRequest, other.DeleteRequest)) return false;
      if (!object.Equals(ContainsRequest, other.ContainsRequest)) return false;
      if (!object.Equals(CountRequest, other.CountRequest)) return false;
      if (!object.Equals(ClearRequest, other.ClearRequest)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (insertRequest_ != null) hash ^= InsertRequest.GetHashCode();
      if (getRequest_ != null) hash ^= GetRequest.GetHashCode();
      if (deleteRequest_ != null) hash ^= DeleteRequest.GetHashCode();
      if (containsRequest_ != null) hash ^= ContainsRequest.GetHashCode();
      if (countRequest_ != null) hash ^= CountRequest.GetHashCode();
      if (clearRequest_ != null) hash ^= ClearRequest.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (insertRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InsertRequest);
      }
      if (getRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GetRequest);
      }
      if (deleteRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DeleteRequest);
      }
      if (containsRequest_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ContainsRequest);
      }
      if (countRequest_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CountRequest);
      }
      if (clearRequest_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ClearRequest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (insertRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InsertRequest);
      }
      if (getRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRequest);
      }
      if (deleteRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteRequest);
      }
      if (containsRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainsRequest);
      }
      if (countRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CountRequest);
      }
      if (clearRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClearRequest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          auth_ = new global::Kronos.Core.Messages.Auth();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.insertRequest_ != null) {
        if (insertRequest_ == null) {
          insertRequest_ = new global::Kronos.Core.Messages.InsertRequest();
        }
        InsertRequest.MergeFrom(other.InsertRequest);
      }
      if (other.getRequest_ != null) {
        if (getRequest_ == null) {
          getRequest_ = new global::Kronos.Core.Messages.GetRequest();
        }
        GetRequest.MergeFrom(other.GetRequest);
      }
      if (other.deleteRequest_ != null) {
        if (deleteRequest_ == null) {
          deleteRequest_ = new global::Kronos.Core.Messages.DeleteRequest();
        }
        DeleteRequest.MergeFrom(other.DeleteRequest);
      }
      if (other.containsRequest_ != null) {
        if (containsRequest_ == null) {
          containsRequest_ = new global::Kronos.Core.Messages.ContainsRequest();
        }
        ContainsRequest.MergeFrom(other.ContainsRequest);
      }
      if (other.countRequest_ != null) {
        if (countRequest_ == null) {
          countRequest_ = new global::Kronos.Core.Messages.CountRequest();
        }
        CountRequest.MergeFrom(other.CountRequest);
      }
      if (other.clearRequest_ != null) {
        if (clearRequest_ == null) {
          clearRequest_ = new global::Kronos.Core.Messages.ClearRequest();
        }
        ClearRequest.MergeFrom(other.ClearRequest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (auth_ == null) {
              auth_ = new global::Kronos.Core.Messages.Auth();
            }
            input.ReadMessage(auth_);
            break;
          }
          case 16: {
            type_ = (global::Kronos.Core.Messages.RequestType) input.ReadEnum();
            break;
          }
          case 26: {
            if (insertRequest_ == null) {
              insertRequest_ = new global::Kronos.Core.Messages.InsertRequest();
            }
            input.ReadMessage(insertRequest_);
            break;
          }
          case 34: {
            if (getRequest_ == null) {
              getRequest_ = new global::Kronos.Core.Messages.GetRequest();
            }
            input.ReadMessage(getRequest_);
            break;
          }
          case 42: {
            if (deleteRequest_ == null) {
              deleteRequest_ = new global::Kronos.Core.Messages.DeleteRequest();
            }
            input.ReadMessage(deleteRequest_);
            break;
          }
          case 50: {
            if (containsRequest_ == null) {
              containsRequest_ = new global::Kronos.Core.Messages.ContainsRequest();
            }
            input.ReadMessage(containsRequest_);
            break;
          }
          case 58: {
            if (countRequest_ == null) {
              countRequest_ = new global::Kronos.Core.Messages.CountRequest();
            }
            input.ReadMessage(countRequest_);
            break;
          }
          case 66: {
            if (clearRequest_ == null) {
              clearRequest_ = new global::Kronos.Core.Messages.ClearRequest();
            }
            input.ReadMessage(clearRequest_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
